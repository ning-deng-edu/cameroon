import java.util.concurrent.Callable;
import java.util.*;

/*** 'Editable' - you can edit the code below based on the needs ***/
User user; // don't touch
String userid;

addActionBarItem("sync", new ToggleActionButtonCallback() {
    actionOnLabel() {
        "Disable Sync";
    }
    actionOn() {
        setSyncEnabled(false);
        setFileSyncEnabled(false);
        showToast("Sync disabled.");
    }
    isActionOff() {
        isSyncEnabled();
    }
    actionOffLabel() {
        "Enable Sync";
    }
    actionOff() {
        setSyncEnabled(true);
        setFileSyncEnabled(true);
        showToast("Sync enabled.");
    }
});

/*** USER ***/
onEvent("user/usertab/users", "click", "login()");

loadUsers() {
    fetchAll("select userid, fname || ' ' || lname from user where userdeleted is null", new FetchCallback() {
        onFetch(result) {
            populateList("user/usertab/users", result);
        }
    });
}


loadUsers();

String username = "";
String device = "";
login() {
    fetchOne("select userid,fname,lname,email from user where userid='" + getListItemValue() + "';", new FetchCallback() {
        onFetch(result) {
            user = new User(result.get(0),result.get(1),result.get(2),result.get(3));
            setUser(user);
            username = result.get(1) + " " + result.get(2);
            showTabGroup("control");
        }
    });
}


/*** QuestionBank ***/
question_id=null;
onEvent("control/question_control/New_Question","click","newQuestion()");
onEvent("questionBank/questionInfo/Finish_New_Question","click","saveNewQuestion()");
onEvent("control/question_control","show","loadQuestionBank()");
onEvent("questionBank/questionInfo/","show","autoQuestionID()");

newQuestion(){
	newTabGroup("questionBank");
	onEvent("questionBank", "show", "showTab(\"questionBank/questionInfo\");");  
}

saveNewQuestion(){
	saveTabGroup("questionBank", question_id, null, null, new SaveCallback() {
    onSave(uuid, newRecord) {
      question_id = uuid;
	  //setFieldValue("questionBank/questionInfo/questionID", question_id);
      if (newRecord) {
        showToast("New record created");
      }
    }
    onError(message) {
        showWarning("error",message);
    }  
  });
  /*
	pushDatabaseToServer("onComplete()");
	onComplete() {
	    showToast("finished pushing database");
	}
	*/
}

autoQuestionID(){
String autoQuestionId=username+getCurrentTime();
setFieldValue("questionBank/questionInfo/questionID", autoQuestionId);
}

loadQuestionBank(){

	fetchAll("SELECT uuid, group_concat(coalesce(measure, ''),' - ') as response " +
    "FROM (select * from latestNonDeletedArchentIdentifiers) " +
    "WHERE aenttypename = 'QuestionBank' " +
    "GROUP BY uuid " +
    "order by response;", new FetchCallback() {
        onFetch(result) {
            populateList("control/question_control/questionList", result);
        }

        onError(message) {
            showToast(message);
        }
    });
}
