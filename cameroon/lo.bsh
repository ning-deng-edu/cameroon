import java.util.concurrent.Callable;
import java.util.ArrayList;
/*** 'Editable' - you can edit the code below based on the needs ***/
User user; // don't touch
String userid;

/*** USER ***/
onEvent("user/usertab/users", "click", "login()");

loadUsers() {
    fetchAll("select userid, fname || ' ' || lname from user where userdeleted is null", new FetchCallback() {
        onFetch(result) {
            populateList("user/usertab/users", result);
        }
    });
}

loadUsers();

String username = "";
String device = "";

login() {
    fetchOne("select userid,fname,lname,email from user where userid='" + getListItemValue() + "';", new FetchCallback() {
        onFetch(result) {
            user = new User(result.get(0),result.get(1),result.get(2),result.get(3));
            setUser(user);
            username = result.get(1) + " " + result.get(2);
            showTabGroup("control");
        }
    });
}

/***Questionnaire***/
onEvent("control/questionnaire_control/New_Questionnaire","click","newQuestionnaire()");
onEvent("questionnaire/questionnaire_info/Finish_New_Questionnaire_Info","click","questionSelection()");
//onEvent("questionnaire/questionnaire_questionSelect/Finish_Question_Select","click","finishCreateQuestionnaire()");
newQuestionnaire(){
    newTabGroup("questionnaire");
    onEvent("questionnaire", "show", "showTab(\"questionnaire/questionnaire_info\");cancelTab(\"questionnaire/questionnaire_info\", false);");

}

questionSelection(){
    String questionnaire_id;
    String questionnaire_name;
    String questionnaire_desc;
    if(isNull(getFieldValue("questionnaire/questionnaire_info/questionnaireName"))) {
            showWarning("Validation Error", "You must fill in the Questionnaire Name before you can continue");
            return;
        } else {
            questionnaire_name = getFieldValue("questionnaire/questionnaire_info/questionnaireName");
            showTab("questionnaire/questionnaire_questionSelect");
            cancelTab(\"questionnaire/questionnaire_info\", false);
            setFieldValue("questionnaire/questionnaire_questionSelect/questionnaire_name", questionnaire_name);
        } 
}
/*
finishCreateQuestionnaire(List question_ids_array){
    String questionnaire_name;
    if(question_ids_array==null)
    {
        showWarning("Validation Error", "You must fill in the Questionnaire Name before you can continue");
        return;
    }
    if(isNull(getFieldValue("questionnaire/questionnaire_questionSelect/questionnaire_name"))){
        showWarning("Validation Error", "You must fill in the Questionnaire Name before you can continue");
        
    }else{
    List question_ids=question_ids_array;
    //TODO:SUBMIT QUESTIONNAIRE HERE
    dialog = showBusy("Saving {Questionnaire}", "Please wait.");
    saveTabGroup("questionnaire", questionnaire_id, null, null, new SaveCallback() {
        onSave(uuid, newRecord) {
            questionnaire_id = uuid;
            if(newRecord) {
            for (question_id : question_ids)
                saveEntitiesToRel("Questionnaire", questionnaire_id, question_id);
            }
            dialog.dismiss();
        }
        onError(message) {
            showToast(message);
        }
    });
    }
}
*/
saveEntitiesToRel(String type, String entity1, String entity2) {
    if (isNull(entity1) || isNull(entity2)) return;
    saveRel(null, type, null, null, new SaveCallback() {
        onSave(rel_id, newRecord) {
            addReln(entity1, rel_id, null);
            addReln(entity2, rel_id, null);
        }
    });
}